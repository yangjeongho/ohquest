<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="app.madeinho.ohquest.ui.accountcode.AccountCodeRepository">
                   
	<sql id="accountCodeColumn">
	    idUI_ACCOUNT_CODE AS iduiAccountCode,
	    idUI_ACCOUNT      AS iduiAccount    ,
	    AC_CODE           AS acCode         ,
	    AC_NAME           AS acName         ,
	    BALANCE           AS balance        ,
	    CHG_CD            AS chgCd          ,
	    CHG_DATE          AS chgDate        ,
	    CONT_CREATE_DATE  AS contCreateDate ,
	    CONT_UPDATE_DATE  AS contUpdateDate ,
	    CONT_SYSTEM       AS contSystem     ,
	    CHG_MESSAGE       AS chgMessage     
	</sql>
	
    <sql id="getAccountCodeListWhere">
		<if test="count > 0">
		    where 
			<foreach collection="filters" separator=" AND " item="filter" index="index">
				${filter.name} = '${filter.value}' 
			</foreach>
		</if>
	</sql>	
	
	<select id="getAccountCodeList" parameterType="AsSearchFilter" resultType="AsAccountCode">
    	SELECT  
    		<include refid="accountCodeColumn"/>       
    	FROM UI_ACCOUNT_CODE    
    		<include refid="getAccountCodeListWhere" />
    </select>

	<select id="getAddressList" parameterType="string" resultType="AsAccountCode">
		SELECT
		    idUI_ACCOUNT_CODE AS iduiAccountCode,
		    idUI_ACCOUNT      AS iduiAccount    ,
		    AC_CODE           AS acCode         ,
		    AC_NAME           AS acName         ,
		    BALANCE           AS balance        ,
		    CHG_CD            AS chgCd          ,
		    CHG_DATE          AS chgDate        ,
		    CONT_CREATE_DATE  AS contCreateDate ,
		    CONT_UPDATE_DATE  AS contUpdateDate ,
		    CONT_SYSTEM       AS contSystem     ,
		    CHG_MESSAGE       AS chgMessage    
		 FROM UI_ACCOUNT_CODE
	</select>
	
	<insert id="insertAccountCode" parameterType="AsAccountCode">
        INSERT INTO UI_ACCOUNT_CODE (
		    idUI_ACCOUNT     , 
		    AC_CODE          , 
		    BALANCE          , 
		    CHG_CD           , 
		    CHG_DATE         , 
		    CONT_CREATE_DATE , 
		    CONT_SYSTEM      , 
		    CHG_MESSAGE       
        ) VALUES(
			#{iduiAccount     ,jdbcType=VARCHAR},    
			#{acCode          ,jdbcType=VARCHAR},
			#{balance         ,jdbcType=VARCHAR},
			#{chgCd           ,jdbcType=VARCHAR},
			#{chgDate         ,jdbcType=VARCHAR},
			SYSDATE() ,
			#{contSystem      ,jdbcType=VARCHAR},
			#{chgMessage      ,jdbcType=VARCHAR}
        )      
	</insert>
	
	<insert id="updateAccountCode" parameterType="AsAccountCode" >
		UPDATE  UI_ACCOUNT_CODE SET
		    <if test="balance != null and balance != ''">
				BALANCE   = #{balance          ,jdbcType=VARCHAR},
			</if>
			<if test="chgCd != null and chgCd != ''">
				CHG_CD     = #{chgCd           ,jdbcType=VARCHAR},
			</if>
			<if test="chgMessage != null and chgMessage != ''">
				CHG_MESSAGE     = #{chgMessage           ,jdbcType=VARCHAR},
			</if>
			CHG_DATE = SYSDATE(),
			CONT_UPDATE_DATE = SYSDATE()
		WHERE idUI_ACCOUNT_CODE  = #{iduiAccountCode    ,jdbcType=VARCHAR}
		  AND idUI_ACCOUNT       = #{iduiAccount        ,jdbcType=VARCHAR}
		  AND AC_CODE            = #{acCode             ,jdbcType=VARCHAR}
	</insert>	 
	
	  <select id="getMyAccountCodeAlltList" parameterType="AsAccountCode" resultType="AsAccountCode">
    	SELECT  
	    	b.idUI_ACCOUNT_CODE  AS iduiAccountCode,
			b.idUI_ACCOUNT       AS iduiAccount    ,
			AC_CODE              AS acCode         ,
			b.AC_NAME              AS acName         ,
			FORMAT(BALANCE, 0)   AS balance        ,
			CHG_CD               AS chgCd          ,
			CHG_DATE             AS chgDate        ,
			CHG_MESSAGE          AS chgMessage     ,
			b.CONT_CREATE_DATE   AS contCreateDate ,
			b.CONT_UPDATE_DATE   AS contUpdateDate ,
			b.CONT_SYSTEM        AS contSystem     
		FROM UI_ACCOUNT a,
		     UI_ACCOUNT_CODE b
		Where a.idUI_ACCOUNT =  b.idUI_ACCOUNT
		  and a.idOH_MEMBER = 	#{idohMember} 	     
	  </select>    
    

</mapper>